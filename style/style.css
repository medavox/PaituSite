*
{
	font-family: "Verdana", Sans-serif;
	/*font-family: "Times New Roman, Serif"*/
}
body
{
	/*font-size: 80%;*/
	font-size:12pt;
}
h1
{
	font-size:1.8em;
}
code
{
	/*font-size: 1.5em;*/
	width: 100%;
	font-family: Monospace;
	/*padding: 5px;
	margin: 15px;*/
	border: thin solid;
	background-color: #f0f0f0;
}
th
{
	background-color: #bbb
}
td, th
{
	/*border-collapse: collapse;
	border: 1px solid grey;*/
	padding: 5px;
}
table
{
	border: 1px solid black;
}
tr:nth-child(even)
{
	background-color: #e0e0e0
}

span
{
	font-family: Courier New;
}

.c /*pygments comments*/
{

	color: #999;
}


.k /*pygments keywords*/
{
	font-weight: bold;
}
/*
{
  w: 'Whitespace',
  esc: 'Escape',
  err: 'Error',
  x: 'Other',

  k: 'Keyword',
  kc: 'Keyword.Constant',
  kd: 'Keyword.Declaration',
  kn: 'Keyword.Namespace',
  kp: 'Keyword.Pseudo',
  kr: 'Keyword.Reserved',
  kt: 'Keyword.Type',

  n: 'Name',
  na: 'Name.Attribute',
  nb: 'Name.Builtin',
  bp: 'Name.Builtin.Pseudo',
  nc: 'Name.Class',
  no: 'Name.Constant',
  nd: 'Name.Decorator',
  ni: 'Name.Entity',
  ne: 'Name.Exception',
  nf: 'Name.Function',
  py: 'Name.Property',
  nl: 'Name.Label',
  nn: 'Name.Namespace',
  nx: 'Name.Other',
  nt: 'Name.Tag',
  nv: 'Name.Variable',
  vc: 'Name.Variable.Class',
  vg: 'Name.Variable.Global',
  vi: 'Name.Variable.Instance',

  l: 'Literal',
  ld: 'Literal.Date',

  s: 'String',
  sb: 'String.Backtick',
  sc: 'String.Char',
  sd: 'String.Doc',
  s2: 'String.Double',
  se: 'String.Escape',
  sh: 'String.Heredoc',
  si: 'String.Interpol',
  sx: 'String.Other',
  sr: 'String.Regex',
  s1: 'String.Single',
  ss: 'String.Symbol',

  m: 'Number',
  mb: 'Number.Bin',
  mf: 'Number.Float',
  mh: 'Number.Hex',
  mi: 'Number.Integer',
  il: 'Number.Integer.Long',
  mo: 'Number.Oct',

  o: 'Operator',
  ow: 'Operator.Word',
  p: 'Punctuation',

  c: 'Comment',
  cm: 'Comment.Multiline',
  cp: 'Comment.Preproc',
  c1: 'Comment.Single',
  cs: 'Comment.Special',

  g: 'Generic',
  gd: 'Generic.Deleted',
  ge: 'Generic.Emph',
  gr: 'Generic.Error',
  gh: 'Generic.Heading',
  gi: 'Generic.Inserted',
  go: 'Generic.Output',
  gp: 'Generic.Prompt',
  gs: 'Generic.Strong',
  gu: 'Generic.Subheading',
  gt: 'Generic.Traceback'

(from https://github.com/zeke/pygments-tokens)
}
*/
/*h3 = 1.2
h2 = 1.5
h1 = 2*/
